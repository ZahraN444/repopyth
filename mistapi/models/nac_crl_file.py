# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class NacCrlFile(object):

    """Implementation of the 'nac_crl_file' model.

    TODO: type model description here.

    Attributes:
        created_time (float): Time at which the file was first uploaded, in
            epoch
        id (str): ID for file upload, used to identify file even for deletion
        modified_time (float): Time at which the file was last updated, in
            epoch
        name (str): Name for the .crl file issuer if set
        url (str): Download URL for the .crl file

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "created_time": 'created_time',
        "id": 'id',
        "modified_time": 'modified_time',
        "name": 'name',
        "url": 'url'
    }

    _optionals = [
        'created_time',
        'id',
        'modified_time',
        'name',
        'url',
    ]

    def __init__(self,
                 created_time=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 modified_time=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 url=APIHelper.SKIP):
        """Constructor for the NacCrlFile class"""

        # Initialize members of the class
        if created_time is not APIHelper.SKIP:
            self.created_time = created_time 
        if id is not APIHelper.SKIP:
            self.id = id 
        if modified_time is not APIHelper.SKIP:
            self.modified_time = modified_time 
        if name is not APIHelper.SKIP:
            self.name = name 
        if url is not APIHelper.SKIP:
            self.url = url 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        created_time = dictionary.get("created_time") if dictionary.get("created_time") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        modified_time = dictionary.get("modified_time") if dictionary.get("modified_time") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        url = dictionary.get("url") if dictionary.get("url") else APIHelper.SKIP
        # Return an object of this model
        return cls(created_time,
                   id,
                   modified_time,
                   name,
                   url)
