# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class NacPortalSsoRoleMatching(object):

    """Implementation of the 'nac_portal_sso_role_matching' model.

    TODO: type model description here.

    Attributes:
        assigned (str): TODO: type description here.
        match (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "assigned": 'assigned',
        "match": 'match'
    }

    _optionals = [
        'assigned',
        'match',
    ]

    def __init__(self,
                 assigned=APIHelper.SKIP,
                 match=APIHelper.SKIP):
        """Constructor for the NacPortalSsoRoleMatching class"""

        # Initialize members of the class
        if assigned is not APIHelper.SKIP:
            self.assigned = assigned 
        if match is not APIHelper.SKIP:
            self.match = match 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        assigned = dictionary.get("assigned") if dictionary.get("assigned") else APIHelper.SKIP
        match = dictionary.get("match") if dictionary.get("match") else APIHelper.SKIP
        # Return an object of this model
        return cls(assigned,
                   match)
