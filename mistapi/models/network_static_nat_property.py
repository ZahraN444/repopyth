# -*- coding: utf-8 -*-

"""
mistapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mistapi.api_helper import APIHelper


class NetworkStaticNatProperty(object):

    """Implementation of the 'network_static_nat_property' model.

    TODO: type model description here.

    Attributes:
        internal_ip (str): TODO: type description here.
        name (str): TODO: type description here.
        wan_name (str): If not set, we configure the nat policies against all
            WAN ports for simplicity

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "internal_ip": 'internal_ip',
        "name": 'name',
        "wan_name": 'wan_name'
    }

    _optionals = [
        'internal_ip',
        'name',
        'wan_name',
    ]

    def __init__(self,
                 internal_ip=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 wan_name=APIHelper.SKIP):
        """Constructor for the NetworkStaticNatProperty class"""

        # Initialize members of the class
        if internal_ip is not APIHelper.SKIP:
            self.internal_ip = internal_ip 
        if name is not APIHelper.SKIP:
            self.name = name 
        if wan_name is not APIHelper.SKIP:
            self.wan_name = wan_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        internal_ip = dictionary.get("internal_ip") if dictionary.get("internal_ip") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        wan_name = dictionary.get("wan_name") if dictionary.get("wan_name") else APIHelper.SKIP
        # Return an object of this model
        return cls(internal_ip,
                   name,
                   wan_name)
